import { Project } from '../types';

export const projectsData: Project[] = [
  {
    id: '1',
    title: 'Customer Churn Prediction',
    description: 'Machine learning model to predict customer churn with ensemble methods achieving 94% accuracy.',
    longDescription: 'Built a comprehensive customer churn prediction system using XGBoost and Random Forest algorithms. The model analyzes customer behavior patterns, transaction history, and engagement metrics to identify at-risk customers. Implemented feature engineering techniques and hyperparameter optimization to achieve optimal performance.',
    technologies: ['Python', 'XGBoost', 'Pandas', 'Scikit-learn', 'Matplotlib', 'Seaborn'],
    category: 'machine-learning',
    image: '/images/churn-prediction.jpg',
    githubUrl: 'https://github.com/yourusername/churn-prediction',
    liveUrl: 'https://churn-prediction-demo.herokuapp.com',
    demoUrl: 'https://churn-prediction-demo.herokuapp.com',
    featured: true,
    completed: true,
    startDate: '2023-01-15',
    endDate: '2023-03-20',
    metrics: [
      { name: 'Accuracy', value: '94%', description: 'Overall model accuracy' },
      { name: 'Precision', value: '92%', description: 'Precision for churn prediction' },
      { name: 'Recall', value: '89%', description: 'Recall for identifying churners' },
      { name: 'ROC-AUC', value: '0.96', description: 'Area under ROC curve' },
    ],
    challenges: [
      'Handling imbalanced dataset with only 12% churn rate',
      'Feature selection from 50+ customer attributes',
      'Real-time prediction requirements',
    ],
    learnings: [
      'Advanced ensemble methods for imbalanced data',
      'Feature importance analysis techniques',
      'Model deployment with Flask API',
    ],
    tags: ['Machine Learning', 'Classification', 'Business Analytics', 'Customer Retention'],
  },
  {
    id: '2',
    title: 'Sales Forecasting Dashboard',
    description: 'Interactive dashboard for real-time sales analytics and forecasting using time series analysis.',
    longDescription: 'Developed a comprehensive sales forecasting system using ARIMA and Prophet models. The dashboard provides real-time insights into sales trends, seasonal patterns, and future predictions. Built with Streamlit for easy deployment and user interaction.',
    technologies: ['Python', 'Prophet', 'Plotly', 'Streamlit', 'PostgreSQL', 'Pandas'],
    category: 'data-analysis',
    image: '/images/sales-dashboard.jpg',
    githubUrl: 'https://github.com/yourusername/sales-dashboard',
    liveUrl: 'https://sales-dashboard.streamlit.app',
    featured: true,
    completed: true,
    startDate: '2023-04-01',
    endDate: '2023-05-15',
    metrics: [
      { name: 'MAPE', value: '8.2%', description: 'Mean Absolute Percentage Error' },
      { name: 'MAE', value: '$12.5K', description: 'Mean Absolute Error' },
      { name: 'Users', value: '500+', description: 'Active dashboard users' },
    ],
    tags: ['Time Series', 'Dashboard', 'Forecasting', 'Business Intelligence'],
  },
  {
    id: '3',
    title: 'NLP Sentiment Analysis',
    description: 'Deep learning model for sentiment analysis of customer reviews and social media data.',
    longDescription: 'Implemented a state-of-the-art sentiment analysis system using BERT transformers. The model processes customer reviews, social media posts, and feedback to determine sentiment polarity and emotional intensity.',
    technologies: ['Python', 'Transformers', 'PyTorch', 'NLTK', 'FastAPI', 'Docker'],
    category: 'nlp',
    image: '/images/sentiment-analysis.jpg',
    githubUrl: 'https://github.com/yourusername/sentiment-analysis',
    liveUrl: 'https://sentiment-api.herokuapp.com',
    featured: true,
    completed: true,
    startDate: '2023-06-01',
    endDate: '2023-07-30',
    metrics: [
      { name: 'F1-Score', value: '0.91', description: 'Weighted F1-score across all classes' },
      { name: 'Accuracy', value: '93%', description: 'Overall classification accuracy' },
      { name: 'Processing Speed', value: '1000 texts/sec', description: 'Real-time processing capability' },
    ],
    tags: ['NLP', 'Deep Learning', 'BERT', 'Sentiment Analysis'],
  },
  {
    id: '4',
    title: 'Fraud Detection System',
    description: 'Real-time fraud detection system for financial transactions using anomaly detection.',
    longDescription: 'Built an advanced fraud detection system using isolation forests and neural networks. The system processes transactions in real-time, identifying suspicious patterns and anomalies with low latency requirements.',
    technologies: ['Python', 'TensorFlow', 'Apache Kafka', 'Redis', 'Docker', 'PostgreSQL'],
    category: 'machine-learning',
    image: '/images/fraud-detection.jpg',
    githubUrl: 'https://github.com/yourusername/fraud-detection',
    featured: false,
    completed: true,
    startDate: '2023-08-15',
    endDate: '2023-10-30',
    metrics: [
      { name: 'Detection Rate', value: '99.2%', description: 'Fraud detection accuracy' },
      { name: 'False Positives', value: '0.3%', description: 'False positive rate' },
      { name: 'Response Time', value: '<100ms', description: 'Average processing time' },
    ],
    tags: ['Anomaly Detection', 'Real-time', 'Financial', 'Machine Learning'],
  },
  {
    id: '5',
    title: 'Computer Vision Image Classifier',
    description: 'Deep learning model for image classification with transfer learning and custom architecture.',
    longDescription: 'Developed a robust image classification system using convolutional neural networks. Implemented transfer learning with pre-trained models and fine-tuned for specific use cases.',
    technologies: ['Python', 'TensorFlow', 'OpenCV', 'Keras', 'PIL', 'NumPy'],
    category: 'computer-vision',
    image: '/images/image-classifier.jpg',
    githubUrl: 'https://github.com/yourusername/image-classifier',
    featured: false,
    completed: true,
    startDate: '2023-11-01',
    endDate: '2023-12-15',
    metrics: [
      { name: 'Top-1 Accuracy', value: '96.8%', description: 'Single prediction accuracy' },
      { name: 'Top-5 Accuracy', value: '99.1%', description: 'Top-5 predictions accuracy' },
      { name: 'Training Time', value: '2 hours', description: 'Model training duration' },
    ],
    tags: ['Computer Vision', 'CNN', 'Transfer Learning', 'Image Classification'],
  },
  {
    id: '6',
    title: 'Recommendation Engine',
    description: 'Collaborative filtering recommendation system for e-commerce platform.',
    longDescription: 'Built a scalable recommendation engine using matrix factorization and deep learning approaches. The system provides personalized product recommendations based on user behavior and preferences.',
    technologies: ['Python', 'Surprise', 'TensorFlow', 'Apache Spark', 'MongoDB', 'Flask'],
    category: 'recommendation-systems',
    image: '/images/recommendation-engine.jpg',
    githubUrl: 'https://github.com/yourusername/recommendation-engine',
    liveUrl: 'https://rec-engine-demo.herokuapp.com',
    featured: false,
    completed: true,
    startDate: '2024-01-01',
    endDate: '2024-02-28',
    metrics: [
      { name: 'Click-through Rate', value: '+23%', description: 'Improvement in CTR' },
      { name: 'User Engagement', value: '+15%', description: 'Increase in user engagement' },
      { name: 'Revenue Impact', value: '+18%', description: 'Revenue increase from recommendations' },
    ],
    tags: ['Recommendation Systems', 'Collaborative Filtering', 'Apache Spark', 'E-commerce'],
  },
];